services:
  postgres:
    image: postgres:17.0
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER="${DATABASE_USER}"
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB="test_database"
      - DATABASE_HOST="localhost"
      - DATABASE_PORT=${DATABASE_PORT}
      - PGUSER=${DATABASE_USER}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    expose:
      - "${DATABASE_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - db_data:/var/lib/postgresql/data    

  frontend:
    build: app/frontend/app/
    ports:
      - 80:80
    environment:
      - DEFAULT_FRONTEND_PATH=${DEFAULT_FRONTEND_PATH}
    command: ["node", "start"]

  backend:
    build: ./app/backend/app
    ports:
      - 8080:8000
    expose:
      - 8080
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB="test_database"
      - DATABASE_HOST="localhost"
      - DATABASE_PORT=${DATABASE_PORT}
    depends_on:
      postgres:
        condition: "service_healthy"
    command: ["psql", "-h", "${DATABASE_HOST}", "-p", "${DATABASE_PORT}", "-W", "${POSTGRES_PASSWORD}", "-d", "${DATABASE_DEFAULT_DATABASE}", "-U", "${POSTGRES_USER}" ]

volumes:
  db_data: